<?xml version="1.0" encoding="UTF-8"?>
<!-- 
 * Copyright (C) 2016 Dienst voor het kadaster en de openbare registers
 * 
 * This file is part of Imvertor.
 *
 * Imvertor is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Imvertor is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Imvertor.  If not, see <http://www.gnu.org/licenses/>.
-->
<config>
   <id>
      <name>Standard initial parameters</name>
      <version-control>$Id: parms.xml 7498 2016-04-15 07:51:23Z arjan $</version-control>
   </id>
   
   <cli-parms>
      <cli-parm>
         <name>help</name>
         <arg>program|license</arg>
         <tip>Print program help and copyright/license info for this application</tip>
         <required>false</required>
      </cli-parm>
      <cli-parm>
         <name>arguments</name>
         <arg>filepath</arg>
         <tip>Path to the file holding (additional) arguments (in the form key = value)</tip>
         <required>false</required>
         <type>file</type>
      </cli-parm> 
      <cli-parm>
         <name>processingmode</name>
         <arg>Processing mode</arg>
         <tip>Specify the processing mode. This takes the form "Owner:Meta:Stage"</tip>
         <required>false</required>
         <type>string</type>
      </cli-parm> 
      <cli-parm>
         <name>language</name>
         <arg>ISO 639-1 codes</arg>
         <tip>Language of the metamodel and model. Specify metamodel:model, like "en:nl", or single code for both.</tip>
         <default>nl:nl</default>
      </cli-parm> 
      <cli-parm>
         <name>debug</name>
         <arg>yes|no</arg>
         <tip>Yes if run in debug mode</tip>
         <default>no</default>
      </cli-parm> 
      <cli-parm>
         <name>debugmode</name>
         <arg>CODE</arg>
         <tip>If debug=yes, then the debug mode must be any of the codes specified between ";". The main chain is "CHAIN".</tip>
         <default>CHAIN</default>
      </cli-parm> 
      <cli-parm>
         <name>profilemode</name>
         <arg>CODE</arg>
         <tip>Specify for which stylesheets (identified by code) a runtime profile must be generated. Codes are specified between ";". Profiling is only available when debug=yes.</tip>
         <required>false</required>
      </cli-parm> 
      <cli-parm>
         <name>task</name>
         <arg>compile|release</arg>
         <tip>Set task to compile or release</tip>
         <default>compile</default>
      </cli-parm> 
      <cli-parm>
         <name>jobid</name>
         <arg>ID</arg>
         <tip>An ID for this particular run of Imvertor</tip>
         <required>true</required>
      </cli-parm> 
      <cli-parm>
         <name>userid</name>
         <arg>ID</arg>
         <tip>ID of the user who started this run</tip>
         <required>true</required>
      </cli-parm> 
      <cli-parm>
         <name>project</name>
         <arg>name</arg>
         <tip>Name of the project</tip>
         <required>true</required>
      </cli-parm> 
      <cli-parm>
         <name>application</name>
         <arg>name</arg>
         <tip>Name of the application, i.e. root package in UML</tip>
         <required>true</required>
      </cli-parm> 
      <cli-parm>
         <name>umlfile</name>
         <arg>filepath</arg>
         <tip>Path to the input UML file, must be EAP or XMI</tip>
         <required>true</required>
         <type>file</type>
      </cli-parm> 
      <cli-parm>
         <name>proxyurl</name>
         <arg>URL</arg>
         <tip>Reliable URL for testing internet connection</tip>
         <default>htps://no_proxyurl</default>
         <type>url</type>
      </cli-parm> 
      <!--
      <cli-parm>
         <name>metamodel</name>
         <arg>name</arg>
         <tip>Name of metamodel used in UML model</tip>
         <required>true</required>
      </cli-parm>
      -->
      <cli-parm>
         <name>forcecompile</name>
         <arg>yes|no</arg>
         <tip>Force a compile and ignore possible errors</tip>
         <default>no</default>
      </cli-parm> 
      <cli-parm>
         <name>docrelease</name>
         <arg>YYYYMMDD</arg>
         <tip>If supplied, this is a documentation release with specified release date</tip>
         <required>false</required>
      </cli-parm> 
      <cli-parm>
         <name>suppresswarnings</name>
         <arg>yes|no</arg>
         <tip>Yes if warnings should be suppressed in documentation</tip>
         <default>no</default>
      </cli-parm> 
      <cli-parm>
         <name>messagelevel</name>
         <arg>warning|error</arg>
         <tip>Set the message level to error (no warnings) or warning (errors and warnings)</tip>
         <default>warning</default>
      </cli-parm>
      <cli-parm>
         <name>allowmultiplesuppliers</name>
         <arg>yes|no</arg>
         <tip>Allow any construct to have multiple suppliers</tip>
         <default>yes</default>
      </cli-parm>
      <cli-parm>
         <name>versionrules</name>
         <arg>name</arg>
         <tip>Name of the version rules file</tip>
         <default>[cli/owner]</default>
      </cli-parm>
      <cli-parm>
         <name>normalizeids</name>
         <arg>yes|no</arg>
         <tip>Yes if XMI based ID's should be normalized, i.e. reduced to unique strings valid for Imvertor processing</tip>
         <default>no</default>
      </cli-parm>
      <cli-parm>
         <name>messagecollapsekeys</name>
         <arg>name(s)</arg>
         <tip>If similar messages should be collapsed, provide a space-separated list of keys for these types of messages.</tip>
         <default><!-- none--></default>
      </cli-parm>
      <cli-parm>
         <name>nativescalars</name>
         <arg>yes|no</arg>
         <tip>Yes if scalar types may be entered without reference to a UML datatype</tip>
         <default>yes</default>
      </cli-parm>
      <cli-parm>
         <name>visuals</name>
         <arg>name</arg>
         <tip>Name of the visuals file. If omitted, assume metamodel name and version as extracted from the supplied model.</tip>
         <required>false</required>
      </cli-parm>
      <cli-parm>
         <name>xlinkversion</name>
         <arg>id</arg>
         <tip>Version of the xlinks specification</tip>
         <default>20010627</default>
      </cli-parm>
      <cli-parm>
         <name>signaldeadurls</name>
         <arg>yes|no</arg>
         <tip>Yes if a warning should, be issued for each inaccessible URL detected in notes and tagged values.</tip>
         <default>no</default>
      </cli-parm>
   </cli-parms>
   
   <!-- properties zijn directe mapping vanuit imvertor.properties. Die moeten dus later netjes worden verwerkt -->
   <properties>

      <!--  location of all individual applications -->
      <APPLICATIONS_FOLDER>${system/managedoutputfolder}/applications</APPLICATIONS_FOLDER>
      
      <!-- default base folder, will be overwritten when more info is available -->
      <APPLICATION_BASE_FOLDER>${system/managedoutputfolder}/applications/${appinfo/project-name}/${appinfo/application-name}</APPLICATION_BASE_FOLDER>
      
      <!-- folder what will hold the release of this application --> 
      <APPLICATION_FOLDER>${properties/APPLICATION_BASE_FOLDER}/${appinfo/release}</APPLICATION_FOLDER>
      
      <!-- folder what will hold the release of this application when it is invalid, and should not override existing application --> 
      <INVALID_APPLICATION_FOLDER>${properties/APPLICATION_BASE_FOLDER}/${appinfo/release}-invalid</INVALID_APPLICATION_FOLDER>
      
      <!-- identity transform stylesheet -->
      <IMVERTOR_IDENTITY_TRANSFORM_XSLPATH>Imvert2identity.xsl</IMVERTOR_IDENTITY_TRANSFORM_XSLPATH>
      
      <!--  location of all distributed (and mass integrated) materials: documentation and schemas -->
      <DISTRIBUTION_FOLDER>${system/managedoutputfolder}/distributions</DISTRIBUTION_FOLDER>
      <!--  location of result release material (per application) -->
      <DISTRIBUTION_APPLICATION_FOLDER>${properties/DISTRIBUTION_FOLDER}/${appinfo/project-name}/${appinfo/application-name}</DISTRIBUTION_APPLICATION_FOLDER>
      
      <!-- location of the XML catalog file; this is a generated file, only for compare step -->
      <GENERATED_CATALOG_FILEPATH>${system/work-folder-path}/catalog.xml</GENERATED_CATALOG_FILEPATH>
      
      <!-- the file that holds the xparms as assigned throughout the chain -->
      <WORK_XPARMS_CHAIN_FILE>${system/work-imvert-folder-path}/imvertor.39.xparms.xml</WORK_XPARMS_CHAIN_FILE>

      <!-- the file that holds the xslt call info collected throughout the chain -->
      <WORK_XSLTCALLS_CHAIN_FILE>${system/work-imvert-folder-path}/imvertor.39.xsltcalls.xml</WORK_XSLTCALLS_CHAIN_FILE>
      
   </properties>
   
   <system>
      <configuration-owner-web-folder>${system/inp-folder-path}/cfg/owners/web</configuration-owner-web-folder>
      <configuration-owner-file>${system/inp-folder-path}/cfg/owners/${cli/owner}.xml</configuration-owner-file>
      <configuration-tvset-file>${system/inp-folder-path}/cfg/tvsets/${appinfo/tvset}.xml</configuration-tvset-file>
      <configuration-xmlschemarules-file>${system/inp-folder-path}/cfg/schemarules/XML-${cli/createxmlschemavariant}.xml</configuration-xmlschemarules-file>
      <configuration-jsonschemarules-file>${system/inp-folder-path}/cfg/schemarules/JSON-${cli/createjsonschemavariant}.xml</configuration-jsonschemarules-file>
      <configuration-notesrules-file>${system/inp-folder-path}/cfg/notesrules/${appinfo/notesrules}.xml</configuration-notesrules-file>
      <configuration-docrules-file>${system/inp-folder-path}/cfg/docrules/${appinfo/docrules}.xml</configuration-docrules-file>
      <configuration-versionrules-file>${system/inp-folder-path}/cfg/versionrules/${cli/versionrules}.xml</configuration-versionrules-file>
      <configuration-visuals-file>${system/inp-folder-path}/cfg/visuals/${appinfo/visuals}.xml</configuration-visuals-file>
      <configuration-shaclrules-file>${system/inp-folder-path}/cfg/shaclrules/${cli/shaclrules}.xml</configuration-shaclrules-file>
      <configuration-skosrules-file>${system/inp-folder-path}/cfg/skosrules/${cli/skosrules}.xml</configuration-skosrules-file>
      <configuration-metamodel-file>${system/inp-folder-path}/cfg/metamodels/${appinfo/metamodel}.xml</configuration-metamodel-file>
      <configuration-i3n-file>${system/inp-folder-path}/cfg/i3n/translation.xml</configuration-i3n-file>
   </system>
   
</config>
